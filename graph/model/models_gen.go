// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"github.com/99designs/gqlgen/graphql"
)

type Crt struct {
	CrtID              *string   `json:"crt_id,omitempty"`
	VendorID           string    `json:"vendor_id"`
	Description        *string   `json:"description,omitempty"`
	IsApplicable       *bool     `json:"is_applicable,omitempty"`
	Expertise          []*string `json:"expertise,omitempty"`
	Languages          []*string `json:"languages,omitempty"`
	OutputDeliveries   []*string `json:"output_deliveries,omitempty"`
	SampleFiles        []*string `json:"sample_files,omitempty"`
	IsExpertiseOnline  *bool     `json:"is_expertise_online,omitempty"`
	IsExpertiseOffline *bool     `json:"is_expertise_offline,omitempty"`
	CreatedAt          *string   `json:"created_at,omitempty"`
	CreatedBy          *string   `json:"created_by,omitempty"`
	UpdatedAt          *string   `json:"updated_at,omitempty"`
	UpdatedBy          *string   `json:"updated_by,omitempty"`
	Status             *string   `json:"status,omitempty"`
}

type CRTInput struct {
	CrtID              *string   `json:"crt_id,omitempty"`
	VendorID           string    `json:"vendor_id"`
	Description        *string   `json:"description,omitempty"`
	IsApplicable       *bool     `json:"is_applicable,omitempty"`
	Expertise          []*string `json:"expertise,omitempty"`
	Languages          []*string `json:"languages,omitempty"`
	OutputDeliveries   []*string `json:"output_deliveries,omitempty"`
	SampleFiles        []*string `json:"sample_files,omitempty"`
	IsExpertiseOnline  *bool     `json:"is_expertise_online,omitempty"`
	IsExpertiseOffline *bool     `json:"is_expertise_offline,omitempty"`
	Status             *string   `json:"status,omitempty"`
}

type CohortMain struct {
	CohortID    *string `json:"cohort_id,omitempty"`
	Name        string  `json:"name"`
	Description string  `json:"description"`
	LspID       string  `json:"lsp_id"`
	Code        string  `json:"code"`
	Status      string  `json:"status"`
	Type        string  `json:"type"`
	IsActive    bool    `json:"is_active"`
	CreatedBy   *string `json:"created_by,omitempty"`
	UpdatedBy   *string `json:"updated_by,omitempty"`
	CreatedAt   string  `json:"created_at"`
	UpdatedAt   string  `json:"updated_at"`
	Size        int     `json:"size"`
	ImageURL    *string `json:"imageUrl,omitempty"`
}

type CohortMainInput struct {
	CohortID    *string         `json:"cohort_id,omitempty"`
	Name        string          `json:"name"`
	Description string          `json:"description"`
	LspID       string          `json:"lsp_id"`
	Code        string          `json:"code"`
	Status      string          `json:"status"`
	Type        string          `json:"type"`
	IsActive    bool            `json:"is_active"`
	CreatedBy   *string         `json:"created_by,omitempty"`
	UpdatedBy   *string         `json:"updated_by,omitempty"`
	Size        int             `json:"size"`
	Image       *graphql.Upload `json:"image,omitempty"`
	ImageURL    *string         `json:"imageUrl,omitempty"`
}

type ContentDevelopment struct {
	CdID               *string   `json:"cd_id,omitempty"`
	VendorID           *string   `json:"vendor_id,omitempty"`
	Description        *string   `json:"description,omitempty"`
	IsApplicable       *bool     `json:"is_applicable,omitempty"`
	Expertise          []*string `json:"expertise,omitempty"`
	Languages          []*string `json:"languages,omitempty"`
	OutputDeliveries   []*string `json:"output_deliveries,omitempty"`
	SampleFiles        []*string `json:"sample_files,omitempty"`
	IsExpertiseOnline  *bool     `json:"is_expertise_online,omitempty"`
	IsExpertiseOffline *bool     `json:"is_expertise_offline,omitempty"`
	CreatedAt          *string   `json:"created_at,omitempty"`
	CreatedBy          *string   `json:"created_by,omitempty"`
	UpdatedAt          *string   `json:"updated_at,omitempty"`
	UpdatedBy          *string   `json:"updated_by,omitempty"`
	Status             *string   `json:"status,omitempty"`
}

type ContentDevelopmentInput struct {
	CdID               *string   `json:"cd_id,omitempty"`
	VendorID           string    `json:"vendor_id"`
	Description        *string   `json:"description,omitempty"`
	IsApplicable       *bool     `json:"is_applicable,omitempty"`
	Expertise          []*string `json:"expertise,omitempty"`
	Languages          []*string `json:"languages,omitempty"`
	OutputDeliveries   []*string `json:"output_deliveries,omitempty"`
	SampleFiles        []*string `json:"sample_files,omitempty"`
	IsExpertiseOnline  *bool     `json:"is_expertise_online,omitempty"`
	IsExpertiseOffline *bool     `json:"is_expertise_offline,omitempty"`
	Status             *string   `json:"status,omitempty"`
}

type Count struct {
	Name  string `json:"name"`
	Count int    `json:"count"`
}

type CourseAnalyticsFacts struct {
	CourseID *string `json:"course_id,omitempty"`
	Status   *string `json:"status,omitempty"`
	Count    *int    `json:"count,omitempty"`
}

type CourseConsumptionStats struct {
	ID                     *string `json:"ID,omitempty"`
	LspID                  *string `json:"LspId,omitempty"`
	CourseID               *string `json:"CourseId,omitempty"`
	Category               *string `json:"Category,omitempty"`
	SubCategory            *string `json:"SubCategory,omitempty"`
	Owner                  *string `json:"Owner,omitempty"`
	Duration               *int    `json:"Duration,omitempty"`
	TotalLearners          *int    `json:"TotalLearners,omitempty"`
	ActiveLearners         *int    `json:"ActiveLearners,omitempty"`
	CompletedLearners      *int    `json:"CompletedLearners,omitempty"`
	ExpectedCompletionTime *int    `json:"ExpectedCompletionTime,omitempty"`
	AverageCompletionTime  *int    `json:"AverageCompletionTime,omitempty"`
	AverageComplianceScore *int    `json:"AverageComplianceScore,omitempty"`
	CreatedAt              *int    `json:"CreatedAt,omitempty"`
	UpdatedAt              *int    `json:"UpdatedAt,omitempty"`
	CreatedBy              *string `json:"CreatedBy,omitempty"`
	UpdatedBy              *string `json:"UpdatedBy,omitempty"`
}

type CourseCountStats struct {
	LspID        *string `json:"lsp_id,omitempty"`
	CourseStatus *string `json:"course_status,omitempty"`
	CourseType   *string `json:"course_type,omitempty"`
	Count        *int    `json:"count,omitempty"`
}

type CourseMapFilters struct {
	LspID       []*string `json:"lsp_id,omitempty"`
	IsMandatory *bool     `json:"is_mandatory,omitempty"`
	Status      *string   `json:"status,omitempty"`
	Type        *string   `json:"type,omitempty"`
}

type CourseViews struct {
	Seconds    *int      `json:"seconds,omitempty"`
	CreatedAt  *string   `json:"created_at,omitempty"`
	LspID      *string   `json:"lsp_id,omitempty"`
	UserIds    []*string `json:"user_ids,omitempty"`
	DateString *string   `json:"date_string,omitempty"`
}

type ExamAttemptsFilters struct {
	AttemptStatus *string `json:"attempt_status,omitempty"`
}

type ExperienceInput struct {
	ExpID           *string `json:"exp_id,omitempty"`
	VendorID        *string `json:"vendor_id,omitempty"`
	Email           string  `json:"email"`
	Title           *string `json:"title,omitempty"`
	CompanyName     *string `json:"company_name,omitempty"`
	EmployementType *string `json:"employement_type,omitempty"`
	Location        *string `json:"location,omitempty"`
	LocationType    *string `json:"location_type,omitempty"`
	StartDate       *int    `json:"start_date,omitempty"`
	EndDate         *int    `json:"end_date,omitempty"`
	Status          *string `json:"status,omitempty"`
}

type ExperienceVendor struct {
	ExpID           string  `json:"ExpId"`
	VendorID        string  `json:"VendorId"`
	PfID            string  `json:"PfId"`
	StartDate       *int    `json:"StartDate,omitempty"`
	EndDate         *int    `json:"EndDate,omitempty"`
	Title           *string `json:"Title,omitempty"`
	Location        *string `json:"Location,omitempty"`
	LocationType    *string `json:"LocationType,omitempty"`
	EmployementType *string `json:"EmployementType,omitempty"`
	CompanyName     *string `json:"CompanyName,omitempty"`
	CreatedAt       *string `json:"CreatedAt,omitempty"`
	CreatedBy       *string `json:"CreatedBy,omitempty"`
	UpdatedAt       *string `json:"UpdatedAt,omitempty"`
	UpdatedBy       *string `json:"UpdatedBy,omitempty"`
	Status          *string `json:"Status,omitempty"`
}

type InviteResponse struct {
	Email     *string `json:"email,omitempty"`
	UserID    *string `json:"user_id,omitempty"`
	UserLspID *string `json:"user_lsp_id,omitempty"`
	Message   string  `json:"message"`
}

type LearningSpace struct {
	LspID      *string   `json:"lsp_id,omitempty"`
	OrgID      string    `json:"org_id"`
	OuID       string    `json:"ou_id"`
	Name       string    `json:"name"`
	LogoURL    *string   `json:"logo_url,omitempty"`
	ProfileURL *string   `json:"profile_url,omitempty"`
	NoUsers    int       `json:"no_users"`
	Owners     []*string `json:"owners,omitempty"`
	IsDefault  bool      `json:"is_default"`
	Status     string    `json:"status"`
	CreatedAt  string    `json:"created_at"`
	UpdatedAt  string    `json:"updated_at"`
	CreatedBy  *string   `json:"created_by,omitempty"`
	UpdatedBy  *string   `json:"updated_by,omitempty"`
}

type LearningSpaceInput struct {
	LspID      *string         `json:"lsp_id,omitempty"`
	Type       string          `json:"type"`
	OrgID      string          `json:"org_id"`
	OuID       string          `json:"ou_id"`
	Name       string          `json:"name"`
	LogoURL    *string         `json:"logo_url,omitempty"`
	Logo       *graphql.Upload `json:"logo,omitempty"`
	ProfileURL *string         `json:"profile_url,omitempty"`
	Profile    *graphql.Upload `json:"profile,omitempty"`
	NoUsers    int             `json:"no_users"`
	Owners     []*string       `json:"owners,omitempty"`
	IsDefault  bool            `json:"is_default"`
	Status     string          `json:"status"`
	CreatedBy  *string         `json:"created_by,omitempty"`
	UpdatedBy  *string         `json:"updated_by,omitempty"`
}

type OrderServices struct {
	ServiceID   *string `json:"service_id,omitempty"`
	OrderID     *string `json:"order_id,omitempty"`
	ServiceType *string `json:"service_type,omitempty"`
	Description *string `json:"description,omitempty"`
	Unit        *string `json:"unit,omitempty"`
	Currency    *string `json:"currency,omitempty"`
	Rate        *int    `json:"rate,omitempty"`
	Quantity    *int    `json:"quantity,omitempty"`
	Total       *int    `json:"total,omitempty"`
	CreatedAt   *string `json:"created_at,omitempty"`
	CreatedBy   *string `json:"created_by,omitempty"`
	UpdatedAt   *string `json:"updated_at,omitempty"`
	UpdatedBy   *string `json:"updated_by,omitempty"`
	Status      *string `json:"status,omitempty"`
}

type OrderServicesInput struct {
	ServiceID   *string `json:"service_id,omitempty"`
	OrderID     *string `json:"order_id,omitempty"`
	ServiceType *string `json:"service_type,omitempty"`
	Description *string `json:"description,omitempty"`
	Unit        *string `json:"unit,omitempty"`
	Currency    *string `json:"currency,omitempty"`
	Rate        *int    `json:"rate,omitempty"`
	Quantity    *int    `json:"quantity,omitempty"`
	Total       *int    `json:"total,omitempty"`
	Status      *string `json:"status,omitempty"`
}

type Organization struct {
	OrgID         *string `json:"org_id,omitempty"`
	Name          string  `json:"name"`
	LogoURL       *string `json:"logo_url,omitempty"`
	Industry      string  `json:"industry"`
	Type          string  `json:"type"`
	Subdomain     string  `json:"subdomain"`
	EmployeeCount int     `json:"employee_count"`
	Website       string  `json:"website"`
	LinkedinURL   *string `json:"linkedin_url,omitempty"`
	FacebookURL   *string `json:"facebook_url,omitempty"`
	TwitterURL    *string `json:"twitter_url,omitempty"`
	Status        string  `json:"status"`
	CreatedAt     string  `json:"created_at"`
	UpdatedAt     string  `json:"updated_at"`
	CreatedBy     *string `json:"created_by,omitempty"`
	UpdatedBy     *string `json:"updated_by,omitempty"`
}

type OrganizationInput struct {
	OrgID         *string         `json:"org_id,omitempty"`
	Name          string          `json:"name"`
	LogoURL       *string         `json:"logo_url,omitempty"`
	Industry      string          `json:"industry"`
	Type          string          `json:"type"`
	Subdomain     string          `json:"subdomain"`
	EmployeeCount int             `json:"employee_count"`
	Website       string          `json:"website"`
	LinkedinURL   *string         `json:"linkedin_url,omitempty"`
	FacebookURL   *string         `json:"facebook_url,omitempty"`
	TwitterURL    *string         `json:"twitter_url,omitempty"`
	Status        string          `json:"status"`
	Logo          *graphql.Upload `json:"logo,omitempty"`
}

type OrganizationUnit struct {
	OuID       *string `json:"ou_id,omitempty"`
	OrgID      string  `json:"org_id"`
	EmpCount   int     `json:"emp_count"`
	Address    string  `json:"address"`
	City       string  `json:"city"`
	State      string  `json:"state"`
	Country    string  `json:"country"`
	PostalCode string  `json:"postal_code"`
	Status     string  `json:"status"`
	CreatedAt  string  `json:"created_at"`
	UpdatedAt  string  `json:"updated_at"`
	CreatedBy  *string `json:"created_by,omitempty"`
	UpdatedBy  *string `json:"updated_by,omitempty"`
}

type OrganizationUnitInput struct {
	OuID       *string `json:"ou_id,omitempty"`
	OrgID      string  `json:"org_id"`
	EmpCount   int     `json:"emp_count"`
	Address    string  `json:"address"`
	City       string  `json:"city"`
	State      string  `json:"state"`
	Country    string  `json:"country"`
	PostalCode string  `json:"postal_code"`
	Status     string  `json:"status"`
	CreatedBy  *string `json:"created_by,omitempty"`
	UpdatedBy  *string `json:"updated_by,omitempty"`
}

type PaginatedBookmarks struct {
	Bookmarks  []*UserBookmark `json:"bookmarks,omitempty"`
	PageCursor *string         `json:"pageCursor,omitempty"`
	Direction  *string         `json:"direction,omitempty"`
	PageSize   *int            `json:"pageSize,omitempty"`
}

type PaginatedCCStats struct {
	Stats      []*CourseConsumptionStats `json:"stats,omitempty"`
	PageCursor *string                   `json:"pageCursor,omitempty"`
	Direction  *string                   `json:"direction,omitempty"`
	PageSize   *int                      `json:"pageSize,omitempty"`
}

type PaginatedCohorts struct {
	Cohorts    []*UserCohort `json:"cohorts,omitempty"`
	PageCursor *string       `json:"pageCursor,omitempty"`
	Direction  *string       `json:"direction,omitempty"`
	PageSize   *int          `json:"pageSize,omitempty"`
}

type PaginatedCohortsMain struct {
	Cohorts    []*CohortMain `json:"cohorts,omitempty"`
	PageCursor *string       `json:"pageCursor,omitempty"`
	Direction  *string       `json:"direction,omitempty"`
	PageSize   *int          `json:"pageSize,omitempty"`
}

type PaginatedCourseMaps struct {
	UserCourses []*UserCourse `json:"user_courses,omitempty"`
	PageCursor  *string       `json:"pageCursor,omitempty"`
	Direction   *string       `json:"direction,omitempty"`
	PageSize    *int          `json:"pageSize,omitempty"`
}

type PaginatedNotes struct {
	Notes      []*UserNotes `json:"notes,omitempty"`
	PageCursor *string      `json:"pageCursor,omitempty"`
	Direction  *string      `json:"direction,omitempty"`
	PageSize   *int         `json:"pageSize,omitempty"`
}

type PaginatedUserDetailsWithRole struct {
	Data       []*UserDetailsRole `json:"data,omitempty"`
	PageCursor *string            `json:"pageCursor,omitempty"`
	Direction  *string            `json:"direction,omitempty"`
	PageSize   *int               `json:"pageSize,omitempty"`
}

type PaginatedUserLspMaps struct {
	UserLspMaps []*UserLspMap `json:"user_lsp_maps,omitempty"`
	PageCursor  *string       `json:"pageCursor,omitempty"`
	Direction   *string       `json:"direction,omitempty"`
	PageSize    *int          `json:"pageSize,omitempty"`
}

type PaginatedUsers struct {
	Users      []*User `json:"users,omitempty"`
	PageCursor *string `json:"pageCursor,omitempty"`
	Direction  *string `json:"direction,omitempty"`
	PageSize   *int    `json:"pageSize,omitempty"`
}

type PaginatedVendorOrder struct {
	Orders     []*VendorOrder `json:"orders,omitempty"`
	PageCursor *string        `json:"pageCursor,omitempty"`
	Direction  *string        `json:"direction,omitempty"`
	PageSize   *int           `json:"pageSize,omitempty"`
}

type PaginatedVendors struct {
	Vendors    []*Vendor `json:"vendors,omitempty"`
	PageCursor *string   `json:"pageCursor,omitempty"`
	Direction  *string   `json:"direction,omitempty"`
	PageSize   *int      `json:"pageSize,omitempty"`
}

type RoleData struct {
	UserRoleID *string `json:"user_role_id,omitempty"`
	Role       *string `json:"role,omitempty"`
	UserLspID  *string `json:"user_lsp_id,omitempty"`
	UpdatedAt  *string `json:"updated_at,omitempty"`
}

type Sme struct {
	VendorID           *string   `json:"vendor_id,omitempty"`
	SmeID              *string   `json:"sme_id,omitempty"`
	Description        *string   `json:"description,omitempty"`
	IsApplicable       *bool     `json:"is_applicable,omitempty"`
	Expertise          []*string `json:"expertise,omitempty"`
	Languages          []*string `json:"languages,omitempty"`
	OutputDeliveries   []*string `json:"output_deliveries,omitempty"`
	SampleFiles        []*string `json:"sample_files,omitempty"`
	IsExpertiseOnline  *bool     `json:"is_expertise_online,omitempty"`
	IsExpertiseOffline *bool     `json:"is_expertise_offline,omitempty"`
	CreatedAt          *string   `json:"created_at,omitempty"`
	CreatedBy          *string   `json:"created_by,omitempty"`
	UpdatedAt          *string   `json:"updated_at,omitempty"`
	UpdatedBy          *string   `json:"updated_by,omitempty"`
	Status             *string   `json:"status,omitempty"`
}

type SMEInput struct {
	VendorID           string    `json:"vendor_id"`
	SmeID              *string   `json:"sme_id,omitempty"`
	Description        *string   `json:"description,omitempty"`
	IsApplicable       *bool     `json:"is_applicable,omitempty"`
	Expertise          []*string `json:"expertise,omitempty"`
	Languages          []*string `json:"languages,omitempty"`
	OutputDeliveries   []*string `json:"output_deliveries,omitempty"`
	SampleFiles        []*string `json:"sample_files,omitempty"`
	IsExpertiseOnline  *bool     `json:"is_expertise_online,omitempty"`
	IsExpertiseOffline *bool     `json:"is_expertise_offline,omitempty"`
	Status             *string   `json:"Status,omitempty"`
}

type SampleFile struct {
	SfID           string  `json:"sf_id"`
	Name           *string `json:"name,omitempty"`
	FileType       *string `json:"fileType,omitempty"`
	Price          *string `json:"price,omitempty"`
	PType          *string `json:"p_type,omitempty"`
	Description    *string `json:"description,omitempty"`
	FileURL        *string `json:"file_url,omitempty"`
	CreatedAt      *string `json:"created_at,omitempty"`
	CreatedBy      *string `json:"created_by,omitempty"`
	UpdatedAt      *string `json:"updated_at,omitempty"`
	UpdatedBy      *string `json:"updated_by,omitempty"`
	Status         *string `json:"status,omitempty"`
	Rate           *int    `json:"rate,omitempty"`
	Currency       *string `json:"currency,omitempty"`
	Unit           *string `json:"unit,omitempty"`
	ActualFileType *string `json:"actualFileType,omitempty"`
}

type SampleFileInput struct {
	File        graphql.Upload `json:"file"`
	Name        string         `json:"name"`
	Description *string        `json:"description,omitempty"`
	Pricing     string         `json:"pricing"`
	FileType    *string        `json:"fileType,omitempty"`
	Status      *string        `json:"status,omitempty"`
	VendorID    string         `json:"vendorId"`
	PType       string         `json:"p_type"`
	Rate        *int           `json:"rate,omitempty"`
	Currency    *string        `json:"currency,omitempty"`
	Unit        *string        `json:"unit,omitempty"`
}

type User struct {
	ID         *string `json:"id,omitempty"`
	FirstName  string  `json:"first_name"`
	LastName   string  `json:"last_name"`
	Status     string  `json:"status"`
	Role       string  `json:"role"`
	IsVerified bool    `json:"is_verified"`
	IsActive   bool    `json:"is_active"`
	Gender     string  `json:"gender"`
	CreatedBy  *string `json:"created_by,omitempty"`
	UpdatedBy  *string `json:"updated_by,omitempty"`
	CreatedAt  string  `json:"created_at"`
	UpdatedAt  string  `json:"updated_at"`
	Email      string  `json:"email"`
	Phone      string  `json:"phone"`
	PhotoURL   *string `json:"photo_url,omitempty"`
}

type UserBookmark struct {
	UserBmID     *string `json:"user_bm_id,omitempty"`
	UserID       string  `json:"user_id"`
	UserLspID    string  `json:"user_lsp_id"`
	UserCourseID string  `json:"user_course_id"`
	CourseID     string  `json:"course_id"`
	ModuleID     string  `json:"module_id"`
	TopicID      string  `json:"topic_id"`
	Name         string  `json:"name"`
	TimeStamp    string  `json:"time_stamp"`
	IsActive     bool    `json:"is_active"`
	CreatedBy    *string `json:"created_by,omitempty"`
	UpdatedBy    *string `json:"updated_by,omitempty"`
	CreatedAt    string  `json:"created_at"`
	UpdatedAt    string  `json:"updated_at"`
}

type UserBookmarkInput struct {
	UserBmID     *string `json:"user_bm_id,omitempty"`
	UserID       string  `json:"user_id"`
	UserLspID    string  `json:"user_lsp_id"`
	UserCourseID string  `json:"user_course_id"`
	CourseID     string  `json:"course_id"`
	ModuleID     string  `json:"module_id"`
	TopicID      string  `json:"topic_id"`
	Name         string  `json:"name"`
	TimeStamp    string  `json:"time_stamp"`
	IsActive     bool    `json:"is_active"`
	CreatedBy    *string `json:"created_by,omitempty"`
	UpdatedBy    *string `json:"updated_by,omitempty"`
}

type UserCohort struct {
	UserCohortID     *string `json:"user_cohort_id,omitempty"`
	UserID           string  `json:"user_id"`
	UserLspID        string  `json:"user_lsp_id"`
	CohortID         string  `json:"cohort_id"`
	AddedBy          string  `json:"added_by"`
	MembershipStatus string  `json:"membership_status"`
	Role             string  `json:"role"`
	CreatedBy        *string `json:"created_by,omitempty"`
	UpdatedBy        *string `json:"updated_by,omitempty"`
	CreatedAt        string  `json:"created_at"`
	UpdatedAt        string  `json:"updated_at"`
}

type UserCohortInput struct {
	UserCohortID     *string `json:"user_cohort_id,omitempty"`
	UserID           string  `json:"user_id"`
	UserLspID        string  `json:"user_lsp_id"`
	CohortID         string  `json:"cohort_id"`
	AddedBy          string  `json:"added_by"`
	MembershipStatus string  `json:"membership_status"`
	Role             string  `json:"role"`
	CreatedBy        *string `json:"created_by,omitempty"`
	UpdatedBy        *string `json:"updated_by,omitempty"`
}

type UserCourse struct {
	UserCourseID *string `json:"user_course_id,omitempty"`
	UserID       string  `json:"user_id"`
	LspID        *string `json:"lsp_id,omitempty"`
	UserLspID    string  `json:"user_lsp_id"`
	CourseID     string  `json:"course_id"`
	CourseType   string  `json:"course_type"`
	AddedBy      string  `json:"added_by"`
	IsMandatory  bool    `json:"is_mandatory"`
	EndDate      *string `json:"end_date,omitempty"`
	CourseStatus string  `json:"course_status"`
	CreatedBy    *string `json:"created_by,omitempty"`
	UpdatedBy    *string `json:"updated_by,omitempty"`
	CreatedAt    string  `json:"created_at"`
	UpdatedAt    string  `json:"updated_at"`
}

type UserCourseInput struct {
	UserCourseID *string `json:"user_course_id,omitempty"`
	UserID       string  `json:"user_id"`
	LspID        *string `json:"lsp_id,omitempty"`
	UserLspID    string  `json:"user_lsp_id"`
	CourseID     string  `json:"course_id"`
	CourseType   string  `json:"course_type"`
	AddedBy      string  `json:"added_by"`
	IsMandatory  bool    `json:"is_mandatory"`
	EndDate      *string `json:"end_date,omitempty"`
	CourseStatus string  `json:"course_status"`
	CreatedBy    *string `json:"created_by,omitempty"`
	UpdatedBy    *string `json:"updated_by,omitempty"`
}

type UserCourseMapStats struct {
	LspID       *string  `json:"lsp_id,omitempty"`
	UserID      *string  `json:"user_id,omitempty"`
	TypeStats   []*Count `json:"type_stats,omitempty"`
	StatusStats []*Count `json:"status_stats,omitempty"`
}

type UserCourseMapStatsInput struct {
	LspID        *string   `json:"lsp_id,omitempty"`
	UserID       *string   `json:"user_id,omitempty"`
	CourseType   []*string `json:"course_type,omitempty"`
	CourseStatus []*string `json:"course_status,omitempty"`
	IsMandatory  *bool     `json:"is_mandatory,omitempty"`
}

type UserCourseProgress struct {
	UserCpID      *string `json:"user_cp_id,omitempty"`
	UserID        string  `json:"user_id"`
	UserCourseID  string  `json:"user_course_id"`
	TopicID       string  `json:"topic_id"`
	TopicType     string  `json:"topic_type"`
	Status        string  `json:"status"`
	VideoProgress string  `json:"video_progress"`
	TimeStamp     string  `json:"time_stamp"`
	CreatedBy     *string `json:"created_by,omitempty"`
	UpdatedBy     *string `json:"updated_by,omitempty"`
	CreatedAt     string  `json:"created_at"`
	UpdatedAt     string  `json:"updated_at"`
}

type UserCourseProgressInput struct {
	UserCpID      *string `json:"user_cp_id,omitempty"`
	UserID        string  `json:"user_id"`
	UserCourseID  string  `json:"user_course_id"`
	TopicID       string  `json:"topic_id"`
	TopicType     string  `json:"topic_type"`
	Status        string  `json:"status"`
	VideoProgress string  `json:"video_progress"`
	TimeStamp     string  `json:"time_stamp"`
	CreatedBy     *string `json:"created_by,omitempty"`
	UpdatedBy     *string `json:"updated_by,omitempty"`
}

type UserDetailsRole struct {
	User   *User       `json:"user,omitempty"`
	Roles  []*RoleData `json:"roles,omitempty"`
	Status *string     `json:"status,omitempty"`
}

type UserExamAttempts struct {
	UserEaID         *string `json:"user_ea_id,omitempty"`
	UserID           string  `json:"user_id"`
	UserLspID        string  `json:"user_lsp_id"`
	UserCpID         string  `json:"user_cp_id"`
	UserCourseID     string  `json:"user_course_id"`
	ExamID           string  `json:"exam_id"`
	AttemptNo        int     `json:"attempt_no"`
	AttemptStatus    string  `json:"attempt_status"`
	AttemptStartTime string  `json:"attempt_start_time"`
	AttemptDuration  string  `json:"attempt_duration"`
	CourseID         *string `json:"course_id,omitempty"`
	CreatedBy        *string `json:"created_by,omitempty"`
	UpdatedBy        *string `json:"updated_by,omitempty"`
	CreatedAt        string  `json:"created_at"`
	UpdatedAt        string  `json:"updated_at"`
}

type UserExamAttemptsInput struct {
	UserEaID         *string `json:"user_ea_id,omitempty"`
	UserID           string  `json:"user_id"`
	UserLspID        string  `json:"user_lsp_id"`
	UserCpID         string  `json:"user_cp_id"`
	UserCourseID     string  `json:"user_course_id"`
	ExamID           string  `json:"exam_id"`
	AttemptNo        int     `json:"attempt_no"`
	AttemptStatus    string  `json:"attempt_status"`
	AttemptStartTime string  `json:"attempt_start_time"`
	AttemptDuration  string  `json:"attempt_duration"`
	CreatedBy        *string `json:"created_by,omitempty"`
	UpdatedBy        *string `json:"updated_by,omitempty"`
}

type UserExamProgress struct {
	UserEpID       *string `json:"user_ep_id,omitempty"`
	UserID         string  `json:"user_id"`
	UserEaID       string  `json:"user_ea_id"`
	UserLspID      string  `json:"user_lsp_id"`
	UserCpID       string  `json:"user_cp_id"`
	SrNo           int     `json:"sr_no"`
	QuestionID     string  `json:"question_id"`
	QuestionType   string  `json:"question_type"`
	Answer         string  `json:"answer"`
	QAttemptStatus string  `json:"q_attempt_status"`
	TotalTimeSpent string  `json:"total_time_spent"`
	CorrectAnswer  string  `json:"correct_answer"`
	SectionID      string  `json:"section_id"`
	CreatedBy      *string `json:"created_by,omitempty"`
	UpdatedBy      *string `json:"updated_by,omitempty"`
	CreatedAt      string  `json:"created_at"`
	UpdatedAt      string  `json:"updated_at"`
}

type UserExamProgressInput struct {
	UserEpID       *string `json:"user_ep_id,omitempty"`
	UserID         string  `json:"user_id"`
	UserEaID       string  `json:"user_ea_id"`
	UserLspID      string  `json:"user_lsp_id"`
	UserCpID       string  `json:"user_cp_id"`
	SrNo           int     `json:"sr_no"`
	QuestionID     string  `json:"question_id"`
	QuestionType   string  `json:"question_type"`
	Answer         string  `json:"answer"`
	QAttemptStatus string  `json:"q_attempt_status"`
	TotalTimeSpent string  `json:"total_time_spent"`
	CorrectAnswer  string  `json:"correct_answer"`
	SectionID      string  `json:"section_id"`
	CreatedBy      *string `json:"created_by,omitempty"`
	UpdatedBy      *string `json:"updated_by,omitempty"`
}

type UserExamResult struct {
	UserErID       *string `json:"user_er_id,omitempty"`
	UserID         string  `json:"user_id"`
	UserEaID       string  `json:"user_ea_id"`
	UserScore      int     `json:"user_score"`
	CorrectAnswers int     `json:"correct_answers"`
	WrongAnswers   int     `json:"wrong_answers"`
	ResultStatus   string  `json:"result_status"`
	CreatedBy      *string `json:"created_by,omitempty"`
	UpdatedBy      *string `json:"updated_by,omitempty"`
	CreatedAt      string  `json:"created_at"`
	UpdatedAt      string  `json:"updated_at"`
}

type UserExamResultDetails struct {
	UserID   string `json:"user_id"`
	UserEaID string `json:"user_ea_id"`
}

type UserExamResultInfo struct {
	UserID   string            `json:"user_id"`
	UserEaID string            `json:"user_ea_id"`
	Results  []*UserExamResult `json:"results,omitempty"`
}

type UserExamResultInput struct {
	UserErID       *string `json:"user_er_id,omitempty"`
	UserID         string  `json:"user_id"`
	UserEaID       string  `json:"user_ea_id"`
	UserScore      int     `json:"user_score"`
	CorrectAnswers int     `json:"correct_answers"`
	WrongAnswers   int     `json:"wrong_answers"`
	ResultStatus   string  `json:"result_status"`
	CreatedBy      *string `json:"created_by,omitempty"`
	UpdatedBy      *string `json:"updated_by,omitempty"`
}

type UserFilters struct {
	Email      *string `json:"email,omitempty"`
	NameSearch *string `json:"nameSearch,omitempty"`
	Role       *string `json:"role,omitempty"`
	Status     *string `json:"status,omitempty"`
}

type UserInput struct {
	ID         *string         `json:"id,omitempty"`
	FirstName  string          `json:"first_name"`
	LastName   string          `json:"last_name"`
	Status     string          `json:"status"`
	Role       string          `json:"role"`
	IsVerified bool            `json:"is_verified"`
	IsActive   bool            `json:"is_active"`
	Gender     string          `json:"gender"`
	CreatedBy  *string         `json:"created_by,omitempty"`
	UpdatedBy  *string         `json:"updated_by,omitempty"`
	Email      string          `json:"email"`
	Phone      string          `json:"phone"`
	Photo      *graphql.Upload `json:"Photo,omitempty"`
	PhotoURL   *string         `json:"photo_url,omitempty"`
}

type UserLanguageMap struct {
	UserLanguageID *string `json:"user_language_id,omitempty"`
	UserID         string  `json:"user_id"`
	UserLspID      string  `json:"user_lsp_id"`
	Language       string  `json:"language"`
	IsBaseLanguage bool    `json:"is_base_language"`
	IsActive       bool    `json:"is_active"`
	CreatedBy      *string `json:"created_by,omitempty"`
	UpdatedBy      *string `json:"updated_by,omitempty"`
	CreatedAt      string  `json:"created_at"`
	UpdatedAt      string  `json:"updated_at"`
}

type UserLanguageMapInput struct {
	UserID         string  `json:"user_id"`
	UserLspID      string  `json:"user_lsp_id"`
	Language       string  `json:"language"`
	IsBaseLanguage bool    `json:"is_base_language"`
	IsActive       bool    `json:"is_active"`
	CreatedBy      *string `json:"created_by,omitempty"`
	UpdatedBy      *string `json:"updated_by,omitempty"`
}

type UserLspMap struct {
	UserLspID *string `json:"user_lsp_id,omitempty"`
	UserID    string  `json:"user_id"`
	LspID     string  `json:"lsp_id"`
	Status    string  `json:"status"`
	CreatedBy *string `json:"created_by,omitempty"`
	UpdatedBy *string `json:"updated_by,omitempty"`
	CreatedAt string  `json:"created_at"`
	UpdatedAt string  `json:"updated_at"`
}

type UserLspMapInput struct {
	UserLspID *string `json:"user_lsp_id,omitempty"`
	UserID    string  `json:"user_id"`
	LspID     string  `json:"lsp_id"`
	Status    string  `json:"status"`
	CreatedBy *string `json:"created_by,omitempty"`
	UpdatedBy *string `json:"updated_by,omitempty"`
}

type UserNotes struct {
	UserNotesID *string `json:"user_notes_id,omitempty"`
	UserID      string  `json:"user_id"`
	UserLspID   string  `json:"user_lsp_id"`
	CourseID    string  `json:"course_id"`
	ModuleID    string  `json:"module_id"`
	TopicID     string  `json:"topic_id"`
	Sequence    int     `json:"sequence"`
	Status      string  `json:"status"`
	Details     string  `json:"details"`
	IsActive    bool    `json:"is_active"`
	CreatedBy   *string `json:"created_by,omitempty"`
	UpdatedBy   *string `json:"updated_by,omitempty"`
	CreatedAt   string  `json:"created_at"`
	UpdatedAt   string  `json:"updated_at"`
}

type UserNotesInput struct {
	UserNotesID *string `json:"user_notes_id,omitempty"`
	UserID      string  `json:"user_id"`
	UserLspID   string  `json:"user_lsp_id"`
	CourseID    string  `json:"course_id"`
	ModuleID    string  `json:"module_id"`
	TopicID     string  `json:"topic_id"`
	Sequence    int     `json:"sequence"`
	Status      string  `json:"status"`
	Details     string  `json:"details"`
	IsActive    bool    `json:"is_active"`
	CreatedBy   *string `json:"created_by,omitempty"`
	UpdatedBy   *string `json:"updated_by,omitempty"`
}

type UserOrganizationMap struct {
	UserOrganizationID *string `json:"user_organization_id,omitempty"`
	UserID             string  `json:"user_id"`
	UserLspID          string  `json:"user_lsp_id"`
	OrganizationID     string  `json:"organization_id"`
	OrganizationRole   string  `json:"organization_role"`
	IsActive           bool    `json:"is_active"`
	EmployeeID         string  `json:"employee_id"`
	CreatedBy          *string `json:"created_by,omitempty"`
	UpdatedBy          *string `json:"updated_by,omitempty"`
	CreatedAt          string  `json:"created_at"`
	UpdatedAt          string  `json:"updated_at"`
}

type UserOrganizationMapInput struct {
	UserOrganizationID *string `json:"user_organization_id,omitempty"`
	UserID             string  `json:"user_id"`
	UserLspID          string  `json:"user_lsp_id"`
	OrganizationID     string  `json:"organization_id"`
	OrganizationRole   string  `json:"organization_role"`
	IsActive           bool    `json:"is_active"`
	EmployeeID         string  `json:"employee_id"`
	CreatedBy          *string `json:"created_by,omitempty"`
	UpdatedBy          *string `json:"updated_by,omitempty"`
}

type UserPreference struct {
	UserPreferenceID *string `json:"user_preference_id,omitempty"`
	UserID           string  `json:"user_id"`
	UserLspID        string  `json:"user_lsp_id"`
	SubCategory      string  `json:"sub_category"`
	IsBase           bool    `json:"is_base"`
	IsActive         bool    `json:"is_active"`
	CreatedBy        *string `json:"created_by,omitempty"`
	UpdatedBy        *string `json:"updated_by,omitempty"`
	CreatedAt        string  `json:"created_at"`
	UpdatedAt        string  `json:"updated_at"`
}

type UserPreferenceInput struct {
	UserPreferenceID *string `json:"user_preference_id,omitempty"`
	UserID           string  `json:"user_id"`
	UserLspID        string  `json:"user_lsp_id"`
	SubCategory      string  `json:"sub_category"`
	IsBase           bool    `json:"is_base"`
	IsActive         bool    `json:"is_active"`
	CreatedBy        *string `json:"created_by,omitempty"`
	UpdatedBy        *string `json:"updated_by,omitempty"`
}

type UserQuizAttempt struct {
	UserQaID     *string `json:"user_qa_id,omitempty"`
	UserID       string  `json:"user_id"`
	UserCpID     string  `json:"user_cp_id"`
	UserCourseID string  `json:"user_course_id"`
	QuizID       string  `json:"quiz_id"`
	QuizAttempt  int     `json:"quiz_attempt"`
	TopicID      string  `json:"topic_id"`
	Result       string  `json:"result"`
	IsActive     bool    `json:"is_active"`
	CreatedBy    *string `json:"created_by,omitempty"`
	UpdatedBy    *string `json:"updated_by,omitempty"`
	CreatedAt    string  `json:"created_at"`
	UpdatedAt    string  `json:"updated_at"`
}

type UserQuizAttemptInput struct {
	UserQaID     *string `json:"user_qa_id,omitempty"`
	UserID       string  `json:"user_id"`
	UserCpID     string  `json:"user_cp_id"`
	UserCourseID string  `json:"user_course_id"`
	QuizID       string  `json:"quiz_id"`
	QuizAttempt  int     `json:"quiz_attempt"`
	TopicID      string  `json:"topic_id"`
	Result       string  `json:"result"`
	IsActive     bool    `json:"is_active"`
	CreatedBy    *string `json:"created_by,omitempty"`
	UpdatedBy    *string `json:"updated_by,omitempty"`
}

type UserRole struct {
	UserRoleID *string `json:"user_role_id,omitempty"`
	UserID     string  `json:"user_id"`
	UserLspID  string  `json:"user_lsp_id"`
	Role       string  `json:"role"`
	IsActive   bool    `json:"is_active"`
	CreatedBy  *string `json:"created_by,omitempty"`
	UpdatedBy  *string `json:"updated_by,omitempty"`
	CreatedAt  string  `json:"created_at"`
	UpdatedAt  string  `json:"updated_at"`
}

type UserRoleInput struct {
	UserRoleID *string `json:"user_role_id,omitempty"`
	UserID     string  `json:"user_id"`
	UserLspID  string  `json:"user_lsp_id"`
	Role       string  `json:"role"`
	IsActive   bool    `json:"is_active"`
	CreatedBy  *string `json:"created_by,omitempty"`
	UpdatedBy  *string `json:"updated_by,omitempty"`
}

type UserWithLspStatus struct {
	ID            *string `json:"id,omitempty"`
	FirstName     string  `json:"first_name"`
	LastName      string  `json:"last_name"`
	Status        string  `json:"status"`
	Role          string  `json:"role"`
	IsVerified    bool    `json:"is_verified"`
	IsActive      bool    `json:"is_active"`
	Gender        string  `json:"gender"`
	CreatedBy     *string `json:"created_by,omitempty"`
	UpdatedBy     *string `json:"updated_by,omitempty"`
	CreatedAt     string  `json:"created_at"`
	UpdatedAt     string  `json:"updated_at"`
	Email         string  `json:"email"`
	Phone         string  `json:"phone"`
	PhotoURL      *string `json:"photo_url,omitempty"`
	UserLspStatus *string `json:"user_lsp_status,omitempty"`
}

type Vendor struct {
	VendorID        string    `json:"vendorId"`
	Type            string    `json:"type"`
	Level           string    `json:"level"`
	Name            string    `json:"name"`
	Phone           *string   `json:"phone,omitempty"`
	LspID           *string   `json:"lsp_id,omitempty"`
	Description     *string   `json:"description,omitempty"`
	PhotoURL        *string   `json:"photo_url,omitempty"`
	Address         *string   `json:"address,omitempty"`
	Users           []*string `json:"users,omitempty"`
	Website         *string   `json:"website,omitempty"`
	FacebookURL     *string   `json:"facebook_url,omitempty"`
	InstagramURL    *string   `json:"instagram_url,omitempty"`
	TwitterURL      *string   `json:"twitter_url,omitempty"`
	LinkedinURL     *string   `json:"linkedin_url,omitempty"`
	Services        []*string `json:"services,omitempty"`
	CreatedAt       *string   `json:"created_at,omitempty"`
	CreatedBy       *string   `json:"created_by,omitempty"`
	UpdatedAt       *string   `json:"updated_at,omitempty"`
	UpdatedBy       *string   `json:"updated_by,omitempty"`
	Status          *string   `json:"status,omitempty"`
	VendorLspStatus *string   `json:"vendor_lsp_status,omitempty"`
}

type VendorFilters struct {
	Status  *string `json:"status,omitempty"`
	Service *string `json:"service,omitempty"`
	Type    *string `json:"type,omitempty"`
	Name    *string `json:"name,omitempty"`
}

type VendorInput struct {
	LspID        *string         `json:"lsp_id,omitempty"`
	Name         *string         `json:"name,omitempty"`
	Level        *string         `json:"level,omitempty"`
	VendorID     *string         `json:"vendor_id,omitempty"`
	Type         *string         `json:"type,omitempty"`
	Photo        *graphql.Upload `json:"photo,omitempty"`
	Address      *string         `json:"address,omitempty"`
	Website      *string         `json:"website,omitempty"`
	FacebookURL  *string         `json:"facebook_url,omitempty"`
	InstagramURL *string         `json:"instagram_url,omitempty"`
	TwitterURL   *string         `json:"twitter_url,omitempty"`
	LinkedinURL  *string         `json:"linkedin_url,omitempty"`
	Phone        *string         `json:"phone,omitempty"`
	Users        []*string       `json:"users,omitempty"`
	Description  *string         `json:"description,omitempty"`
	Status       *string         `json:"status,omitempty"`
}

type VendorOrder struct {
	ID          *string `json:"id,omitempty"`
	VendorID    *string `json:"vendor_id,omitempty"`
	LspID       *string `json:"lsp_id,omitempty"`
	Total       *int    `json:"total,omitempty"`
	Tax         *int    `json:"tax,omitempty"`
	GrandTotal  *int    `json:"grand_total,omitempty"`
	Description *string `json:"description,omitempty"`
	CreatedAt   *string `json:"created_at,omitempty"`
	CreatedBy   *string `json:"created_by,omitempty"`
	UpdatedAt   *string `json:"updated_at,omitempty"`
	UpdatedBy   *string `json:"updated_by,omitempty"`
	Status      *string `json:"status,omitempty"`
}

type VendorOrderInput struct {
	ID          *string `json:"id,omitempty"`
	VendorID    *string `json:"vendor_id,omitempty"`
	LspID       *string `json:"lsp_id,omitempty"`
	Total       *int    `json:"total,omitempty"`
	Tax         *int    `json:"tax,omitempty"`
	GrandTotal  *int    `json:"grand_total,omitempty"`
	Description *string `json:"description,omitempty"`
	Status      *string `json:"status,omitempty"`
}

type VendorProfile struct {
	PfID               *string   `json:"pf_id,omitempty"`
	VendorID           *string   `json:"vendor_id,omitempty"`
	FirstName          *string   `json:"first_name,omitempty"`
	LastName           *string   `json:"last_name,omitempty"`
	Email              *string   `json:"email,omitempty"`
	Phone              *string   `json:"phone,omitempty"`
	PhotoURL           *string   `json:"photo_url,omitempty"`
	Description        *string   `json:"description,omitempty"`
	Language           []*string `json:"language,omitempty"`
	SmeExpertise       []*string `json:"sme_expertise,omitempty"`
	ClassroomExpertise []*string `json:"classroom_expertise,omitempty"`
	ContentDevelopment []*string `json:"content_development,omitempty"`
	Experience         []*string `json:"experience,omitempty"`
	ExperienceYears    *string   `json:"experience_years,omitempty"`
	Sme                *bool     `json:"sme,omitempty"`
	Crt                *bool     `json:"crt,omitempty"`
	Cd                 *bool     `json:"cd,omitempty"`
	IsSpeaker          *bool     `json:"is_speaker,omitempty"`
	LspID              *string   `json:"lsp_id,omitempty"`
	CreatedAt          *string   `json:"created_at,omitempty"`
	CreatedBy          *string   `json:"created_by,omitempty"`
	UpdatedAt          *string   `json:"updated_at,omitempty"`
	UpdatedBy          *string   `json:"updated_by,omitempty"`
	Status             *string   `json:"status,omitempty"`
}

type VendorProfileInput struct {
	VendorID           string          `json:"vendor_id"`
	FirstName          *string         `json:"first_name,omitempty"`
	LastName           *string         `json:"last_name,omitempty"`
	Email              string          `json:"email"`
	Phone              *string         `json:"phone,omitempty"`
	Photo              *graphql.Upload `json:"photo,omitempty"`
	Description        *string         `json:"description,omitempty"`
	Languages          []*string       `json:"languages,omitempty"`
	SmeExpertise       []*string       `json:"sme_expertise,omitempty"`
	ClassroomExpertise []*string       `json:"classroom_expertise,omitempty"`
	ContentDevelopment []*string       `json:"content_development,omitempty"`
	Experience         []*string       `json:"experience,omitempty"`
	ExperienceYears    *string         `json:"experience_years,omitempty"`
	IsSpeaker          *bool           `json:"is_speaker,omitempty"`
	Status             *string         `json:"status,omitempty"`
}

type VendorUserMap struct {
	VendorID  *string `json:"vendor_id,omitempty"`
	UserID    *string `json:"user_id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	CreatedBy *string `json:"created_by,omitempty"`
	Status    *string `json:"status,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	UpdatedBy *string `json:"updated_by,omitempty"`
}
