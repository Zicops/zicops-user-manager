scalar Upload

type User {
  id: ID
  firstName: String!
  lastName: String!
  Status: String!
  Role: String!
  IsVerified: Boolean!
  IsActive: Boolean!
  Gender: String!
  CreatedBy: String!
  UpdatedBy: String!
  CreatedAt: String!
  UpdatedAt: String!
  Email: String!
  Phone: String!
  PhotoUrl: String
}

input UserInput {
  id: ID
  firstName: String!
  lastName: String!
  Status: String!
  Role: String!
  IsVerified: Boolean!
  IsActive: Boolean!
  Gender: String!
  CreatedBy: String!
  UpdatedBy: String!
  Email: String!
  Phone: String!
  Photo: Upload
  PhotoUrl: String
}

type UserLoginContext{
  user: User!
  access_token: String!
}

type Query {
  logout: Boolean
  getUpdatedToken: String
}

type Mutation {
  registerUsers(input: [UserInput]!): [User]
  inviteUsers(emails: [String!]!): Boolean
  updateUser(input: UserInput!): User
  login: UserLoginContext
}
