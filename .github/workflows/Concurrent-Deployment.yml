# Deploy to Staging

name: Concurrent-Deployment
run-name: Deployment-${{ github.event.inputs.environment }}

# setting concurrency at workflow level
concurrency: ${{ github.event.inputs.environment }}

# trigger event
on: 
 workflow_dispatch:
  inputs:
      environment:
       description: 'Environment'
       type: environment
       required: true

      
env:
  # Setting an environment variable with the value of approvers
  prod_approvers: ${{ vars.PRODUCTION_APPROVERS }}
  staging_approvers: ${{ vars.STAGING_APPROVERS }}
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_ZONE: asia-south1-a
  SERVICE_NAME: zicops-user-manager
  

# Deploy  jobs

jobs:
#Initialize variables based on trigger branch (staging or main)
  initialize:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    outputs:
      GKE_CLUSTER: ${{ steps.setvars.outputs.GKE_CLUSTER }}${{ steps.setvars_staging.outputs.GKE_CLUSTER }}
      NAMESPACE: ${{ steps.setvars.outputs.NAMESPACE }}${{ steps.setvars_staging.outputs.NAMESPACE }}
      APPROVERS: ${{ steps.setvars.outputs.APPROVERS }}${{ steps.setvars_staging.outputs.APPROVERS }}
      run_rest_jobs: ${{ steps.set_output.outputs.run_jobs }}
      
    steps:
     - name: Initializing variables
       run: echo "Initializing variables..."
       

     - name: Set variables_production
       if: github.ref == 'refs/heads/main' 
       id: setvars
       run: |
        echo "GKE_CLUSTER=zicops-dot-com-1" >> $GITHUB_OUTPUT
        echo "NAMESPACE = production" >> $GITHUB_OUTPUT
        echo "APPROVERS = ${{ vars.PRODUCTION_APPROVERS }}" >> $GITHUB_OUTPUT
        
     - name: Set variables_staging
       if: github.ref == 'refs/heads/staging'
       id: setvars_staging
       run: |
        echo "GKE_CLUSTER=zicops-production-cost-one" >> $GITHUB_OUTPUT
        echo "NAMESPACE = staging" >> $GITHUB_OUTPUT
        echo "APPROVERS = ${{ vars.STAGING_APPROVERS }}" >> $GITHUB_OUTPUT
        
     - name: Check if branch is either staging or main
       id: set_output
       run: |
         if [[github.ref == 'refs/heads/main'  || github.ref == 'refs/heads/staging']]; then
          echo "run_jobs=true" >> $GITHUB_OUTPUT
         else
          echo "run_jobs=false" >> $GITHUB_OUTPUT
         fi


# Get Approvals for Deployment
  Approvals:
    runs-on: ubuntu-latest
    needs: initialize
    if: ${{ needs.initialize.outputs.run_rest_jobs == 'true'}}
    steps:
      - name: Get Approvals
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: ${{ needs.initialize.outputs.APPROVERS }}
          minimum-approvals: 1
          issue-title: "Deploying to ${{ github.event.inputs.environment }}"
          issue-body: "Please approve or deny the deployment"
          exclude-workflow-initiator-as-approver: false
          
      - name: Code Testing
        run: |
         echo running on branch ${GITHUB_REF##*/}
         echo approvers ${{ needs.initialize.outputs.APPROVERS }}
         echo run rest jobs ${{ needs.initialize.outputs.run_rest_jobs }}
         
      
 # call-staging-deployment-workflow:
 #  needs: [Deployment]
 #  uses: Zicops/zicops-user-manager/.github/workflows/Reusable-zicops-cicd-um.yml@${GITHUB_REF##*/}
